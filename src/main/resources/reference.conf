akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    debug {
      # enable function of LoggingReceive, which is to log any received message at DEBUG level
      #receive = on
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill and the like)
      #autoreceive = on
      # enable DEBUG logging of actor lifecycle changes
      #lifecycle = on
    }
  }

  http {
    host-connection-pool {
      max-connections = 16
      max-open-requests = 2048
      pipelining-limit = 4
      max-retries = 2
    }

    server {
      listen_ip : "0.0.0.0"
      listen_port: 8080

      request_log: true
      request_log: ${?REQUEST_LOG}
    }

  }
}

metrics {
  jvm = true
  # These are the metrics reporters
  reporters {
    Slf4j {
      # The name of the reporter class
      class = "com.featurefm.riversong.metrics.reporting.Slf4jReporter"
      # Is the reporter enabled
      enabled = off
      # What is the interval to report on
      reporting-interval = 10m
      # What is the logger
      logger = "com.featurefm.riversong.metrics"
    }
    statsD {
      # The name of the reporter class
      class = "com.featurefm.riversong.metrics.reporting.StatsDReporter"
      # Is the reporter enabled
      enabled = off
      enabled = ${?STATSD_REPORTING}
      # What is the interval to report on
      reporting-interval = 10s
      # The StatsD host
      host = "statsd.marathon.mesos"
      host = ${?STATSD_HOST}
      # The statsd port #8125
      port = 16125
      port = ${?STATSD_PORT}
      # An optional prefix to append to metrics being sent to StatsD
      metric-prefix = "river-song"
      metric-prefix = ${?MARATHON_APP_ID}
    }
    influx {
      # The name of the reporter class
      class = "com.featurefm.riversong.metrics.reporting.InfluxDbReporter"
      # Is the reporter enabled
      enabled = off
      # What is the interval to report on
      reporting-interval = 10s
      # The InfluxDb host
      host = "localhost"
      # The InfluxDb port
      port = 8086
      # The database to push to
      database = ""
      # The credentials to authenticate as
      user = ""
      password = ""
      # An optional prefix to append to metrics being sent to StatsD
      metric-prefix = ""
    }
    datadog {
      # The name of the reporter class
      class = "com.featurefm.riversong.metrics.reporting.DogStatsDReporter"
      # Is the reporter enabled
      enabled = off
      # What is the interval to report on
      reporting-interval = 10s
      # The Datadog host
      host = "localhost"
      # The port
      port = 8125
      # API key
      api-key = ""
      # An optional comma delimited list of tags to send with the metrics.
      tags = []
      # An optional prefix to append to metrics being sent to StatsD
      metric-prefix = ""
    }
  }
}
